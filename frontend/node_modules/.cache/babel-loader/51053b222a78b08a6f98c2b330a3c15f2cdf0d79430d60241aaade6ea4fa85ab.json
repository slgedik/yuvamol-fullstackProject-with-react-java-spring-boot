{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { handleRef } from './utils'; // ========================================================\n// react/packages/react-reconciler/src/ReactFiber.js\n// ========================================================\n\n/**\n * Detects if a passed element is a Fiber object instead of an element. Is needed as `ReactDOM.findDOMNode()` returns\n * a Fiber in `react-test-renderer` that can cause issues with tests. Is used only in non-production env.\n *\n * @see https://github.com/facebook/react/issues/7371#issuecomment-317396864\n * @see https://github.com/Semantic-Org/Semantic-UI-React/issues/4061#issuecomment-694895617\n */\nfunction isFiberRef(node) {\n  if (node === null) {\n    return false;\n  }\n  if (node instanceof Element || node instanceof Text) {\n    return false;\n  }\n  return !!(node.type && node.tag);\n}\nexport var RefFindNode = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RefFindNode, _React$Component);\n  function RefFindNode() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.prevNode = void 0;\n    return _this;\n  }\n  var _proto = RefFindNode.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var currentNode = ReactDOM.findDOMNode(this);\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFiberRef(currentNode)) {\n        currentNode = null;\n      }\n    }\n    this.prevNode = currentNode;\n    handleRef(this.props.innerRef, currentNode);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var currentNode = ReactDOM.findDOMNode(this);\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFiberRef(currentNode)) {\n        currentNode = null;\n      }\n    }\n    if (this.prevNode !== currentNode) {\n      this.prevNode = currentNode;\n      handleRef(this.props.innerRef, currentNode);\n    }\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, currentNode);\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    handleRef(this.props.innerRef, null);\n    delete this.prevNode;\n  };\n  _proto.render = function render() {\n    var children = this.props.children;\n    return children;\n  };\n  return RefFindNode;\n}(React.Component);","map":{"version":3,"names":["React","ReactDOM","handleRef","isFiberRef","node","Element","Text","type","tag","RefFindNode","_React$Component","_inheritsLoose","_this","_len","arguments","length","args","Array","_key","call","apply","concat","prevNode","_proto","prototype","componentDidMount","currentNode","findDOMNode","process","env","NODE_ENV","props","innerRef","componentDidUpdate","prevProps","componentWillUnmount","render","children","Component"],"sources":["/Users/silagedik/Desktop/yuvamol/frontend/node_modules/@fluentui/react-component-ref/dist/es/RefFindNode.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { handleRef, RefProps } from './utils';\n\n// ========================================================\n// react/packages/react-reconciler/src/ReactFiber.js\n// ========================================================\n\ntype Fiber = {\n  // Tag identifying the type of fiber.\n  tag: string;\n  // The resolved function/class/ associated with this fiber.\n  type: any;\n};\n\n/**\n * Detects if a passed element is a Fiber object instead of an element. Is needed as `ReactDOM.findDOMNode()` returns\n * a Fiber in `react-test-renderer` that can cause issues with tests. Is used only in non-production env.\n *\n * @see https://github.com/facebook/react/issues/7371#issuecomment-317396864\n * @see https://github.com/Semantic-Org/Semantic-UI-React/issues/4061#issuecomment-694895617\n */\nfunction isFiberRef(node: Element | Fiber | Text | null): boolean {\n  if (node === null) {\n    return false;\n  }\n\n  if (node instanceof Element || node instanceof Text) {\n    return false;\n  }\n\n  return !!(node.type && node.tag);\n}\n\nexport class RefFindNode extends React.Component<RefProps> {\n  prevNode?: Node | null;\n\n  componentDidMount() {\n    let currentNode = ReactDOM.findDOMNode(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFiberRef(currentNode)) {\n        currentNode = null;\n      }\n    }\n\n    this.prevNode = currentNode;\n    handleRef(this.props.innerRef, currentNode);\n  }\n\n  componentDidUpdate(prevProps: RefProps) {\n    let currentNode = ReactDOM.findDOMNode(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFiberRef(currentNode)) {\n        currentNode = null;\n      }\n    }\n\n    if (this.prevNode !== currentNode) {\n      this.prevNode = currentNode;\n      handleRef(this.props.innerRef, currentNode);\n    }\n\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, currentNode);\n    }\n  }\n\n  componentWillUnmount() {\n    handleRef(this.props.innerRef, null);\n\n    delete this.prevNode;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return children;\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAEA,SAASC,SAAT,QAAoC,SAApC,C,CAEA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAATA,CAAoBC,IAApB,EAAkE;EAChE,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,KAAP;EACD;EAED,IAAIA,IAAI,YAAYC,OAAhB,IAA2BD,IAAI,YAAYE,IAA/C,EAAqD;IACnD,OAAO,KAAP;EACD;EAED,OAAO,CAAC,EAAEF,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACI,GAApB,CAAR;AACD;AAED,WAAaC,WAAb,0BAAAC,gBAAA;EAAAC,cAAA,CAAAF,WAAA,EAAAC,gBAAA;EAAA,SAAAD,YAAA;IAAA,IAAAG,KAAA;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAN,KAAA,GAAAF,gBAAA,CAAAS,IAAA,CAAAC,KAAA,CAAAV,gBAAA,SAAAW,MAAA,CAAAL,IAAA;IAAAJ,KAAA,CACEU,QADF;IAAA,OAAAV,KAAA;EAAA;EAAA,IAAAW,MAAA,GAAAd,WAAA,CAAAe,SAAA;EAAAD,MAAA,CAGEE,iBAHF,GAGE,SAAAA,kBAAA,EAAoB;IAClB,IAAIC,WAAW,GAAGzB,QAAQ,CAAC0B,WAAT,CAAqB,IAArB,CAAlB;IAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAI3B,UAAU,CAACuB,WAAD,CAAd,EAA6B;QAC3BA,WAAW,GAAG,IAAd;MACD;IACF;IAED,KAAKJ,QAAL,GAAgBI,WAAhB;IACAxB,SAAS,CAAC,KAAK6B,KAAL,CAAWC,QAAZ,EAAsBN,WAAtB,CAAT;EACD,CAdH;EAAAH,MAAA,CAgBEU,kBAhBF,GAgBE,SAAAA,mBAAmBC,SAAnB,EAAwC;IACtC,IAAIR,WAAW,GAAGzB,QAAQ,CAAC0B,WAAT,CAAqB,IAArB,CAAlB;IAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAI3B,UAAU,CAACuB,WAAD,CAAd,EAA6B;QAC3BA,WAAW,GAAG,IAAd;MACD;IACF;IAED,IAAI,KAAKJ,QAAL,KAAkBI,WAAtB,EAAmC;MACjC,KAAKJ,QAAL,GAAgBI,WAAhB;MACAxB,SAAS,CAAC,KAAK6B,KAAL,CAAWC,QAAZ,EAAsBN,WAAtB,CAAT;IACD;IAED,IAAIQ,SAAS,CAACF,QAAV,KAAuB,KAAKD,KAAL,CAAWC,QAAtC,EAAgD;MAC9C9B,SAAS,CAAC,KAAK6B,KAAL,CAAWC,QAAZ,EAAsBN,WAAtB,CAAT;IACD;EACF,CAjCH;EAAAH,MAAA,CAmCEY,oBAnCF,GAmCE,SAAAA,qBAAA,EAAuB;IACrBjC,SAAS,CAAC,KAAK6B,KAAL,CAAWC,QAAZ,EAAsB,IAAtB,CAAT;IAEA,OAAO,KAAKV,QAAZ;EACD,CAvCH;EAAAC,MAAA,CAyCEa,MAzCF,GAyCE,SAAAA,OAAA,EAAS;IACP,IAAQC,QAAR,GAAqB,KAAKN,KAA1B,CAAQM,QAAR;IAEA,OAAOA,QAAP;EACD,CA7CH;EAAA,OAAA5B,WAAA;AAAA,EAAiCT,KAAK,CAACsC,SAAvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}